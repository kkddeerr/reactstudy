{"ast":null,"code":"var _jsxFileName = \"/Users/kdh/Documents/DevelopHyuk/react/src/component/todoListList.js\";\nimport React, { Component } from 'react';\nimport TodoData from './todoListData';\nimport '../css/todoListList.css';\n\nclass todoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 1;\n    this.state = {\n      data: [{\n        id: 0,\n        todo: 'hihi'\n      }] // static getDerivedStateFromProps(nextProps, prevState) { \n      //   console.log(\"get Data From App.js [getDerivedStateFromProps]\")\n      //   //return { todoStr : nextProps.addTodo}\n      //   return null;\n      // }\n\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"get Data From App.js [shouldComponentUpdate]\");\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const data = this.state.data;\n\n    if (prevProps.todo !== this.state.todo) {\n      console.log(this.state.data);\n      this.setState({\n        data: data.concat({\n          id: this.id++,\n          todo: this.props.addTodo\n        })\n      });\n    }\n\n    console.log(JSON.stringify(\"str\" + {\n      data\n    }));\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n  }\n\n  render() {\n    console.log(\"RENDER DONE\");\n    const data = this.state.data;\n    const todoLists = data.map(data => React.createElement(TodoData, {\n      key: data.id,\n      todoData: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, todoLists);\n  }\n\n}\n\nexport default todoList;","map":{"version":3,"sources":["/Users/kdh/Documents/DevelopHyuk/react/src/component/todoListList.js"],"names":["React","Component","TodoData","todoList","id","state","data","todo","shouldComponentUpdate","nextProps","nextState","console","log","componentDidUpdate","prevProps","prevState","setState","concat","props","addTodo","JSON","stringify","componentDidMount","render","todoLists","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,yBAAP;;AAGA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAM/BG,EAN+B,GAM1B,CAN0B;AAAA,SAO/BC,KAP+B,GAOvB;AACNC,MAAAA,IAAI,EAAG,CAAC;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASG,QAAAA,IAAI,EAAG;AAAhB,OAAD,CADD,CAIR;AACA;AACA;AACA;AACA;;AARQ,KAPuB;AAAA;;AAiB/BC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AAEA,WAAO,IAAP;AAED;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AAAA,UAC9BT,IAD8B,GACrB,KAAKD,KADgB,CAC9BC,IAD8B;;AAEtC,QAAKQ,SAAS,CAACP,IAAV,KAAkB,KAAKF,KAAL,CAAWE,IAAlC,EAAwC;AACxCI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,IAAvB;AACA,WAAKU,QAAL,CAAc;AACRV,QAAAA,IAAI,EAAEA,IAAI,CAACW,MAAL,CAAa;AAAEb,UAAAA,EAAE,EAAG,KAAKA,EAAL,EAAP;AAAkBG,UAAAA,IAAI,EAAG,KAAKW,KAAL,CAAWC;AAApC,SAAb;AADE,OAAd;AAGC;;AAEDR,IAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAI,CAACC,SAAL,CAAe,QAAQ;AAAEf,MAAAA;AAAF,KAAvB,CAAZ;AACD;;AAEDgB,EAAAA,iBAAiB,GAAG;AAClBX,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACPZ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AADO,UAECN,IAFD,GAEU,KAAKD,KAFf,CAECC,IAFD;AAIP,UAAMkB,SAAS,GAAGlB,IAAI,CAACmB,GAAL,CAChBnB,IAAI,IAAK,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACF,EAApB;AAAwB,MAAA,QAAQ,EAAEE,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,CAAlB;AAIA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKkB,SADL,CADJ;AAKD;;AArD8B;;AAwDjC,eAAerB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport TodoData from './todoListData';\nimport '../css/todoListList.css';\n\n\nclass todoList extends Component {\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  id = 1\n  state = {\n    data : [{ id: 0, todo : 'hihi' } ]\n    }\n\n  // static getDerivedStateFromProps(nextProps, prevState) { \n  //   console.log(\"get Data From App.js [getDerivedStateFromProps]\")\n  //   //return { todoStr : nextProps.addTodo}\n  //   return null;\n  // }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"get Data From App.js [shouldComponentUpdate]\")\n  \n    return true \n   \n  }\n\n  componentDidUpdate(prevProps, prevState){\n    const { data } = this.state;\n    if ( prevProps.todo!== this.state.todo) {\n    console.log(this.state.data);\n    this.setState({\n          data: data.concat( { id : this.id++, todo : this.props.addTodo })\n        })\n    }\n\n    console.log(JSON.stringify(\"str\" + { data }))    \n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\")\n  }\n  \n  render() {\n    console.log(\"RENDER DONE\")\n    const { data } = this.state;\n   \n    const todoLists = data.map(\n      data => (<TodoData key={data.id} todoData={data}/>)\n    );\n\n    return (\n        <div>\n            {todoLists}\n        </div>\n    )\n  }\n}\n\nexport default todoList;\n"]},"metadata":{},"sourceType":"module"}