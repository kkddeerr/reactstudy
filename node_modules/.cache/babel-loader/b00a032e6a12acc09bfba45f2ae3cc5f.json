{"ast":null,"code":"var _jsxFileName = \"/Users/kdh/Documents/DevelopHyuk/react/src/component/todoListList.js\";\nimport React, { Component } from 'react';\nimport TodoData from './todoListData';\nimport '../css/todoListList.css';\n\nclass todoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 0;\n    this.count = 0;\n    this.state = {\n      data: [] // static getDerivedStateFromProps(nextProps, prevState) { \n      //   console.log(\"get Data From App.js [getDerivedStateFromProps]\")\n      //   //return { todoStr : nextProps.addTodo}\n      //   return null;\n      // }\n\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"get Data From App.js [shouldComponentUpdate]  \" + this.count++);\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const data = this.state.data;\n    console.log(\"pomponentDidUpdate  \" + this.count++);\n    if (prevProps.addTodo !== this.props.addTodo) //if ( prevState.data !== data) {\n      this.setState({\n        data: data.concat({\n          id: this.id++,\n          todo: this.props.addTodo\n        })\n      }); //}\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount    \" + this.count++);\n  }\n\n  render() {\n    console.log(\"RENDER DONE\");\n    const data = this.state.data;\n    const todoLists = data.map(data => React.createElement(TodoData, {\n      key: data.id,\n      todoData: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, todoLists);\n  }\n\n}\n\nexport default todoList;","map":{"version":3,"sources":["/Users/kdh/Documents/DevelopHyuk/react/src/component/todoListList.js"],"names":["React","Component","TodoData","todoList","id","count","state","data","shouldComponentUpdate","nextProps","nextState","console","log","componentDidUpdate","prevProps","prevState","addTodo","props","setState","concat","todo","componentDidMount","render","todoLists","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,yBAAP;;AAGA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAM/BG,EAN+B,GAM1B,CAN0B;AAAA,SAO/BC,KAP+B,GAOvB,CAPuB;AAAA,SAQ/BC,KAR+B,GAQvB;AACNC,MAAAA,IAAI,EAAG,EADD,CAIR;AACA;AACA;AACA;AACA;;AARQ,KARuB;AAAA;;AAkB/BC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,mDAAmD,KAAKP,KAAL,EAA/D;AACA,WAAO,IAAP;AACD;;AAEDQ,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AAAA,UAC9BR,IAD8B,GACrB,KAAKD,KADgB,CAC9BC,IAD8B;AAEtCI,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAA4B,KAAKP,KAAL,EAAxC;AACA,QAAIS,SAAS,CAACE,OAAV,KAAsB,KAAKC,KAAL,CAAWD,OAArC,EACA;AACA,WAAKE,QAAL,CAAc;AACRX,QAAAA,IAAI,EAAEA,IAAI,CAACY,MAAL,CAAa;AAAEf,UAAAA,EAAE,EAAG,KAAKA,EAAL,EAAP;AAAkBgB,UAAAA,IAAI,EAAG,KAAKH,KAAL,CAAWD;AAApC,SAAb;AADE,OAAd,EALsC,CAQtC;AACD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0B,KAAKP,KAAL,EAAtC;AACD;;AAEDiB,EAAAA,MAAM,GAAG;AACPX,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AADO,UAECL,IAFD,GAEU,KAAKD,KAFf,CAECC,IAFD;AAIP,UAAMgB,SAAS,GAAGhB,IAAI,CAACiB,GAAL,CAChBjB,IAAI,IAAK,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACH,EAApB;AAAwB,MAAA,QAAQ,EAAEG,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,CAAlB;AAIA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKgB,SADL,CADJ;AAKD;;AAnD8B;;AAsDjC,eAAepB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport TodoData from './todoListData';\nimport '../css/todoListList.css';\n\n\nclass todoList extends Component {\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  id = 0\n  count = 0\n  state = {\n    data : []\n    }\n\n  // static getDerivedStateFromProps(nextProps, prevState) { \n  //   console.log(\"get Data From App.js [getDerivedStateFromProps]\")\n  //   //return { todoStr : nextProps.addTodo}\n  //   return null;\n  // }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"get Data From App.js [shouldComponentUpdate]  \" + this.count++)\n    return true\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    const { data } = this.state;\n    console.log(\"pomponentDidUpdate  \"    + this.count++)\n    if( prevProps.addTodo !== this.props.addTodo)\n    //if ( prevState.data !== data) {\n    this.setState({\n          data: data.concat( { id : this.id++, todo : this.props.addTodo })\n        })\n    //}\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount    \" + this.count++)\n  }\n  \n  render() {\n    console.log(\"RENDER DONE\")\n    const { data } = this.state;\n   \n    const todoLists = data.map(\n      data => (<TodoData key={data.id} todoData={data}/>)\n    );\n\n    return (\n        <div>\n            {todoLists}\n        </div>\n    )\n  }\n}\n\nexport default todoList;\n"]},"metadata":{},"sourceType":"module"}